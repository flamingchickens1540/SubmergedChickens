model TeamMatch {
  id                           Int          @id @default(autoincrement())
  team                         Team         @relation(fields: [team_number], references: [number])
  team_number                  Int
  event_key                    String
  event                        Event        @relation(fields: [event_key], references: [event_key])
  actions                      ActionData[]
  auto_start_location          AutoStart
  auto_leave_start             Boolean
  auto_intake_ground_succeed   Int
  auto_intake_source_succeed   Int
  auto_intake_reef_succeed     Int
  auto_score_l1_succeed        Int
  auto_score_l2_succeed        Int
  auto_score_l3_succeed        Int
  auto_score_l4_succeed        Int
  auto_score_processor_succeed Int
  auto_score_net_succeed       Int
  auto_clean_succeed           Int
  auto_leave_start_fail        Int
  auto_intake_ground_fail      Int
  auto_intake_source_fail      Int
  auto_intake_reef_fail        Int
  auto_score_l1_fail           Int
  auto_score_l2_fail           Int
  auto_score_l3_fail           Int
  auto_score_l4_fail           Int
  auto_score_processor_fail    Int
  auto_score_net_fail          Int
  auto_clean_fail              Int
  tele_intake_ground_succeed   Int
  tele_intake_source_succeed   Int
  tele_intake_reef_succeed     Int
  tele_score_l1_succeed        Int
  tele_score_l2_succeed        Int
  tele_score_l3_succeed        Int
  tele_score_l4_succeed        Int
  tele_score_processor_succeed Int
  tele_score_net_succeed       Int
  tele_clean_succeed           Int
  tele_intake_ground_fail      Int
  tele_intake_source_fail      Int
  tele_intake_reef_fail        Int
  tele_score_l1_fail           Int
  tele_score_l2_fail           Int
  tele_score_l3_fail           Int
  tele_score_l4_fail           Int
  tele_score_processor_fail    Int
  tele_score_net_fail          Int
  tele_clean_fail              Int
  endgame                      Endgame
  skill                        Int
  tags                         Tag[]
  notes                        String
  incap_time                   Float[]
  userId                       Int
  user                         User         @relation(fields: [userId], references: [id])
}

model ActionData {
  id         Int         @id @default(autoincrement())
  action     Action
  success    Boolean
  team_match TeamMatch[]
}

// Refers to distance from wall with processor on that side
enum AutoStart {
  Far
  MidFar
  Mid
  MidClose
  Close
}

enum Action {
  AutoLeaveStart
  AutoIntakeGround
  AutoIntakeSource
  AutoIntakeReef
  AutoScoreL1
  AutoScoreL2
  AutoScoreL3
  AutoScoreL4
  AutoScoreProcessor
  AutoScoreNet
  AutoClean

  TeleIntakeGround
  TeleIntakeSource
  TeleIntakeReef
  TeleScoreL1
  TeleScoreL2
  TeleScoreL3
  TeleScoreL4
  TeleScoreProcessor
  TeleScoreNet
  TeleClean

  IncapStart
  IncapEnd
}

enum Endgame {
  Deep
  Shallow
  Park
  Fail
  None
}
