import type { Tag } from "lucide-svelte"

// Match Scout Page State Enums
export type TelePageState =
    | "Verify"
    | "ScoreAlgae"
    | "CleanAlgae"
    | "ScoreCoral"
    | "Incap"
    | "None"
export type AutoPageState = TelePageState | "Intake"

export type TeleActionState =
    | `ScoreAlgae${"Processor" | "Net"}`
    | `RemoveAlgae${"L2" | "L3"}`
    | `ScoreCoral${"L1" | "L2" | "L3" | "L4"}`
    | "Incap"
    | "None"
export type AutoAction =
    | TeleActionState
    | `Intake${`Coral${"Station" | "Preplaced" | "Floor"}` | `Algae${"Preplaced" | "Reef" | "Floor"}`}`
    | "Leave"

export type AutoActionData = {
    action: AutoAction
    success: boolean
}
export type TeleActionData = {
    action: TeleActionState
    success: boolean
}

// The TeamMatch sent to the database
//TODO IMPLEMENT TAGS INTO MATCHDATA
export type TeamMatchData = {
    scout_id: string
    team_key: string
    match_key: string

    timeline: Timeline
    end: EndAction
    driver_skill: 1 | 2 | 3 | 4 | 5
    notes: string
    tags: TagCategory[]
}

export type Timeline = {
    auto: AutoActionData[]
    tele: TeleActionData[]
}

export type EndAction = "DeepClimb" | "ShallowClimb" | "Failed" | "None"

type TagCategory = {
    category: string
    tags: string[]
}
// NOTE Structs for interfacing with the db are autogenerated by prisma with
// `bun db:load`
