import type {
    AutoStart,
    Endgame,
    AutoActionData,
    TeleActionData,
} from "@prisma/client"

// Match Scout Page State Enums
export type TelePageState =
    | "Verify"
    | "ScoreAlgae"
    | "CleanAlgae"
    | "ScoreCoral"
    | "Incap"
    | "None"
export type AutoPageState = TelePageState | "Intake"

export type TeleActionState =
    | `ScoreAlgae${"Processor" | "Net"}`
    | `CleanAlgae${"L2" | "L3"}`
    | `ScoreCoral${"L1" | "L2" | "L3" | "L4"}`
    | "Incap"
    | "None"
export type AutoAction =
    | TeleActionState
    | `Intake${`Coral${"Station" | "Preplaced"}` | `Algae${"Preplaced" | "Reef"}`}`
    | "Leave"

export type Timeline = {
    auto: Omit<AutoActionData, "id">[]
    tele: Omit<TeleActionData, "id">[]
}

export type UncountedTeamMatch = {
    match_key: string
    team_number: number
    event_key: string
    auto_start_location: AutoStart
    auto_leave_start: boolean
    timeline: Timeline
    endgame: Endgame
    skill: 1 | 2 | 3 | 4 | 5
    notes: string
    incap_time: number[]
    user_id: number
    tagNames: string[]
}

export type EndAction =
    | "DeepClimb"
    | "ShallowClimb"
    | "Parked"
    | "Failed"
    | "None"

type TagCategory = {
    category: string
    tags: string[]
}
// NOTE Structs for interfacing with the db are autogenerated by prisma with
// `bun db:load`

type BugReport = {
    sender_id: number
    report_text: string
    report_title: string
}
